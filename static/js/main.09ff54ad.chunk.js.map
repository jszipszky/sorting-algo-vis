{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["SWAP_ID","COMP_ID","bubbleSort","arr","compDisplay","anims","swapped","j","length","i","tmp","push","insertionSort","heapSort","n","Math","floor","heapify","largest","left","right","timeouts","speed_base","SLIDER_MULT","speed_add","speed_sub","SortingVisualizer","props","state","array","this","resetArray","enableSlider","clearTimeout","randomInt","setState","resetColors","color","bars","document","getElementsByClassName","style","backgroundColor","className","map","value","idx","key","height","id","onClick","console","log","toggle","getElementById","compDisplayVar","runAnims","type","min","max","defaultValue","step","onChange","sliderChange","sort","minI","selectionSort","disabled","barOneId","barTwoId","ID","barOneStyle","barTwoStyle","setTimeout","themSorted","slice","a","b","meSorted","arraysEqual","React","Component","random","one","two","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09ff54ad.chunk.js","sourcesContent":["const SWAP_ID = 0;\r\nconst COMP_ID = -1;\r\n\r\nexport function bubbleSort(arr, compDisplay) {\r\n    const anims = [];\r\n    var swapped = false;\r\n    for (var j = arr.length - 1; j > 0; j--) {\r\n        for (var i = 0; i < j; i++) {\r\n            if (arr[i] > arr[i + 1]) {\r\n                swapped = true;\r\n                let tmp = arr[i];\r\n                arr[i] = arr[i + 1];\r\n                arr[i + 1] = tmp;\r\n                anims.push([i, i + 1, SWAP_ID]);\r\n            } else if (compDisplay) {\r\n                anims.push([i, i + 1, COMP_ID])\r\n            }\r\n        }\r\n        if (swapped === false) {\r\n            return anims;\r\n        }\r\n        swapped = false;\r\n    }\r\n    return anims;\r\n}\r\n\r\nexport function insertionSort(arr, compDisplay) {\r\n    const anims = [];\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n        for (let j = i + 1; j > 0; j--) {\r\n            if (arr[j] < arr[j - 1]) {\r\n                let tmp = arr[j - 1];\r\n                arr[j - 1] = arr[j];\r\n                arr[j] = tmp;\r\n                anims.push([j, j-1, SWAP_ID]);\r\n            } else {\r\n                if (compDisplay) {\r\n                    anims.push([j, j - 1, COMP_ID])\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return anims;\r\n}\r\n\r\nexport function selectionSort(arr, compDisplay) {\r\n    const anims = [];\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n        let minI = i;\r\n        for (let j = i + 1; j < arr.length; j++) {\r\n            if (compDisplay) {\r\n                anims.push([minI, j, COMP_ID])\r\n            }\r\n            if (arr[j] < arr[minI]) {\r\n                minI = j;\r\n            }\r\n        }\r\n        if (minI !== i) {\r\n            let tmp = arr[minI];\r\n            arr[minI] = arr[i];\r\n            arr[i] = tmp;\r\n            anims.push([minI, i, SWAP_ID]);\r\n        }\r\n    }\r\n    return anims;\r\n}\r\n\r\nexport function heapSort(arr, compDisplay) {\r\n    const anims = [];\r\n    let n = arr.length;\r\n    for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n        heapify(arr, n, i, anims, compDisplay);\r\n    }\r\n\r\n    for (let i = n - 1; i >= 0; i--) {\r\n        let tmp = arr[0];\r\n        arr[0] = arr[i];\r\n        arr[i] = tmp;\r\n        n--;\r\n\r\n        anims.push([0, i, SWAP_ID]);\r\n\r\n        heapify(arr, i, 0, anims, compDisplay);\r\n    }\r\n    return anims;\r\n}\r\n\r\nfunction heapify(arr, n, i, anims, compDisplay) {\r\n    let largest = i;\r\n    let left = 2*i + 1;\r\n    let right = 2*i + 2;\r\n\r\n    if (left < n) {\r\n        if (compDisplay) {\r\n            anims.push([left, largest, COMP_ID]);\r\n        }\r\n        if (arr[left] > arr[largest]) {\r\n            largest = left;\r\n        }\r\n    }\r\n    if (right < n) { \r\n        if (compDisplay) {\r\n            anims.push([right,largest, COMP_ID]);\r\n        }\r\n        if(arr[right] > arr[largest]) {\r\n            largest = right;\r\n        }\r\n    }\r\n\r\n    if (largest !== i) {\r\n        let tmp = arr[i];\r\n        arr[i] = arr[largest];\r\n        arr[largest] = tmp;\r\n\r\n        anims.push([i, largest, SWAP_ID]);\r\n\r\n        heapify(arr, n, largest, anims, compDisplay);\r\n    }\r\n}","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport {bubbleSort, insertionSort, selectionSort, heapSort} from '../SortingAlgorithms/SortingAlgorithms.js';\r\n\r\nconst SLIDER_MULT = 10\r\nconst UNS_COLOR = 'brown';\r\nconst SWAPPING  = 'green';\r\nconst COMPARING = 'gold';\r\nconst SWAP_ID = 0;\r\n/*const COMP_ID = -1;*/\r\nvar compDisplay = true;\r\nvar timeouts = [];\r\nvar speed_base = (SLIDER_MULT / 2) * 100;\r\nvar speed_add = .36 * speed_base;\r\nvar speed_sub = .34 * speed_base;\r\n\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray()\r\n    }\r\n\r\n    resetArray() {\r\n            enableSlider();\r\n            for (let i = 0; i < timeouts.length; i ++) {\r\n                clearTimeout(timeouts[i]);\r\n            }\r\n            timeouts =[];\r\n            const array = [];\r\n            for (let i = 0; i < 70; i++) {\r\n                array.push(randomInt(5, 500));\r\n            }\r\n            this.setState({array});\r\n            this.resetColors(UNS_COLOR); \r\n    }\r\n\r\n    resetColors(color) {\r\n        const bars = document.getElementsByClassName(\"arr-bar\");\r\n        for (let i = 0; i < bars.length; i++) {\r\n            bars[i].style.backgroundColor = color;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const {array} = this.state;\r\n\r\n        return (\r\n            <div className=\"arr-container\">\r\n                {array.map((value, idx) => (\r\n                    <div \r\n                    className=\"arr-bar\"\r\n                    key={idx}\r\n                    style={{\r\n                        backgroundColor: UNS_COLOR,\r\n                        height: `${value}px`,\r\n                    }}></div>\r\n                ))}\r\n                <button className=\"toggle\"\r\n                        id=\"toggle\"\r\n                        onClick={() => compDisplayVar()}>\r\n                        Toggle Comp Display\r\n                </button>\r\n                <button className=\"button\"\r\n                        onClick={() => this.resetArray()}>\r\n                        New Array\r\n                </button>\r\n                <button className=\"button\"\r\n                        onClick={() => this.runAnims(0, compDisplay)}>\r\n                        Bubble Sort\r\n                </button>\r\n                <button className=\"button\"\r\n                        onClick={() => this.runAnims(1, compDisplay)}>\r\n                        Insertion Sort\r\n                </button>\r\n                <button className=\"button\"\r\n                        onClick={() => this.runAnims(2, compDisplay)}>\r\n                        Selection Sort\r\n                </button>\r\n                <button className=\"button\"\r\n                        onClick={() => this.runAnims(3, compDisplay)}>\r\n                        Test Heap Sort\r\n                </button>\r\n                <div className=\"slider-container\">\r\n                    <input type=\"range\"\r\n                        min=\".1\"\r\n                        max={SLIDER_MULT - .1}\r\n                        defaultValue={SLIDER_MULT / 2}\r\n                        className=\"slider\"\r\n                        step=\".1\"\r\n                        id=\"SpeedSlider\"\r\n                        onChange={this.sliderChange}>\r\n                    </input>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    runAnims(sort, compDisplay) {\r\n        var anims = [];\r\n        switch(sort) {\r\n            case 0:\r\n                anims = bubbleSort(this.state.array, compDisplay);\r\n                break;\r\n            case 1:\r\n                anims = insertionSort(this.state.array, compDisplay);\r\n                break;\r\n            case 2:\r\n                anims = selectionSort(this.state.array, compDisplay);\r\n                break;\r\n            case 3:\r\n                anims = heapSort(this.state.array, compDisplay);\r\n                break;\r\n            default:\r\n                console.log('something went wrong');\r\n                break;\r\n\r\n        }\r\n        const bars = document.getElementsByClassName('arr-bar');\r\n        disableSlider();\r\n        for (let i = 0; i < anims.length; i++) {\r\n            const [barOneId, barTwoId, ID] = anims[i];\r\n            const barOneStyle = bars[barOneId].style;\r\n            const barTwoStyle = bars[barTwoId].style;\r\n\r\n                timeouts.push(setTimeout(() => {\r\n                    barOneStyle.backgroundColor = (ID === SWAP_ID ? SWAPPING : COMPARING);\r\n                    barTwoStyle.backgroundColor = (ID === SWAP_ID ? SWAPPING : COMPARING);\r\n                }, i * speed_base - speed_sub));\r\n            \r\n                if (ID === 0) {\r\n                    timeouts.push(setTimeout(() => {\r\n                        let tmp = barOneStyle.height;\r\n                        barOneStyle.height = barTwoStyle.height;\r\n                        barTwoStyle.height = tmp;\r\n                    }, i * speed_base));\r\n                }\r\n                timeouts.push(setTimeout(() => {\r\n                    if (i === anims.length - 1) {\r\n                        enableSlider();\r\n                    }\r\n                    barOneStyle.backgroundColor = UNS_COLOR;\r\n                    barTwoStyle.backgroundColor = UNS_COLOR;\r\n                }, i * speed_base + speed_add));\r\n        }        \r\n    }\r\n\r\n    insertionSortAnims() {\r\n        const anims = insertionSort(this.state.array);\r\n        const bars = document.getElementsByClassName('arr-bar');\r\n        for (let i = 0; i < anims.length; i++) {\r\n            const [barOneId, barTwoId] = anims[i];\r\n            const barOneStyle = bars[barOneId].style;\r\n            const barTwoStyle = bars[barTwoId].style;\r\n            const color = SWAPPING;\r\n\r\n            timeouts.push(setTimeout(() => {\r\n                barOneStyle.backgroundColor = color;\r\n                barTwoStyle.backgroundColor = color;\r\n            }, i * speed_base - speed_sub));\r\n            \r\n\r\n            timeouts.push(setTimeout(() => {\r\n                let tmp = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = tmp;\r\n            }, i * speed_base));\r\n\r\n            timeouts.push(setTimeout(() => {\r\n                barOneStyle.backgroundColor = UNS_COLOR;\r\n                barTwoStyle.backgroundColor = UNS_COLOR;\r\n            }, i * speed_base + speed_add));\r\n        }\r\n    }\r\n\r\n    bubbleSortAnims() {\r\n        const anims = bubbleSort(this.state.array);\r\n        const bars = document.getElementsByClassName('arr-bar');\r\n        for (let i = 0; i < anims.length; i++) {\r\n            const [barOneId, barTwoId] = anims[i];\r\n            const barOneStyle = bars[barOneId].style;\r\n            const barTwoStyle = bars[barTwoId].style;\r\n            const color = SWAPPING;\r\n\r\n            timeouts.push(setTimeout(() => {\r\n                barOneStyle.backgroundColor = color;\r\n                barTwoStyle.backgroundColor = color;\r\n            }, i * speed_base - speed_sub));\r\n            \r\n\r\n            timeouts.push(setTimeout(() => {\r\n                let tmp = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = tmp;\r\n            }, i * speed_base));\r\n\r\n            timeouts.push(setTimeout(() => {\r\n                barOneStyle.backgroundColor = UNS_COLOR;\r\n                barTwoStyle.backgroundColor = UNS_COLOR;\r\n            }, i * speed_base + speed_add));\r\n        }\r\n    }\r\n\r\n    sliderChange() {\r\n        const slider = document.getElementById(\"SpeedSlider\");\r\n        const value = SLIDER_MULT - slider.value;\r\n        speed_base = value * 100;\r\n        speed_sub = .36 * speed_base;\r\n        speed_add = .34 * speed_base;\r\n        console.log(speed_base);\r\n    }\r\n\r\n    testSorting() {\r\n        for (let i = 0; i < 100; i++) {\r\n            const array = [];\r\n            const length = randomInt(1, 1000);\r\n            for (let i = 0; i < length; i++) {\r\n                array.push(randomInt(-1000, 1000));\r\n            }\r\n            const themSorted = array.slice().sort((a,b) => a - b);\r\n            const meSorted = heapSort(array.slice());\r\n            console.log(arraysEqual(themSorted, meSorted));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction compDisplayVar(){\r\n    console.log(compDisplay);\r\n    compDisplay = !compDisplay;\r\n    var toggle = document.getElementById(\"toggle\");\r\n    if (compDisplay) {\r\n        toggle.style.backgroundColor = 'darkgreen';\r\n    } else {\r\n        toggle.style.backgroundColor = 'brown';\r\n    }\r\n    console.log(compDisplay);\r\n}\r\n\r\nfunction enableSlider() {\r\n    document.getElementById(\"SpeedSlider\").disabled = false;\r\n    document.getElementById(\"SpeedSlider\").className = \"slider\";\r\n}\r\n\r\nfunction disableSlider() {\r\n    document.getElementById(\"SpeedSlider\").disabled = true;\r\n    document.getElementById(\"SpeedSlider\").className = \"disabled_slider\";\r\n}\r\n\r\nfunction arraysEqual(one, two) {\r\n    if (one.length !== two.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < one.length; i++) {\r\n        if (one[i] !== two[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SortingVisualizer></SortingVisualizer>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}